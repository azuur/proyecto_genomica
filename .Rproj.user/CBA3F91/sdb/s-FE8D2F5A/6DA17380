{
    "collab_server" : "",
    "contents" : "require(here)\nrequire(tidyverse)\nrequire(magrittr)\nrequire(infotheo)\nrequire(minet)\nrequire(GENIE3)\nrequire(bnlearn)\nrequire(tidyverse)\nrequire(reshape2)\nrequire(magrittr)\nrequire(fastGeneMI)\nrequire(genefilter)\nrequire(lattice)\nrequire(RColorBrewer)\nrequire(latticeExtra)\nrequire(vsn)\nrequire(doParallel)\nrequire(doRNG)\n#require(janitor)\n\n\n## TRANSFORMATION FROM [0,infty) TO [0,1]\nMIM_transform <- function(x){return(sqrt(1-exp(-2*x)))}\n\n\n#TIGRESS ON ONE VARIABLE\n#WE OUGHTA FIND THE SOURCE OF THIS. FOUND IT ONLINE\ntigressIND<- function(y,x,alpha = 0.4,L = 2,R = 1000){\n  n <- length(y);\n  require(lars);\n  #indexMat <- matrix(0,R,L)\n  indexMat <- matrix(0,L,ncol(x))\n  for(i in 1:floor(R/2)){\n    indexVec <- sample(1:n,n);\n    xr1 <- t(t(x[indexVec[1:floor(n/2)],])*runif(ncol(x),alpha,1));\n    xr2 <- t(t(x[indexVec[(floor(n/2)+1):n],])*runif(ncol(x),alpha,1));\n    result1 <- lars(x=xr1,y=y[indexVec[1:floor(n/2)]],type='lar',max.steps=L,use.Gram=FALSE)\n    w1<-rev(order(result1$entry,decreasing=T)[1:L])\n    indexMat[,w1][lower.tri(indexMat[,w1],diag=T)] <- indexMat[,w1][lower.tri(indexMat[,w1],diag=T)] + 1;\n    result2 <- lars(x=xr2,y=y[indexVec[(floor(n/2)+1):n]],type='lar',max.steps=L,use.Gram=FALSE)\n    w2<-rev(order(result2$entry,decreasing=T)[1:L])\n    indexMat[,w2][lower.tri(indexMat[,w2],diag=T)] <- indexMat[,w2][lower.tri(indexMat[,w2],diag=T)] + 1;\n  }\n  return(colMeans(indexMat/R))\n}\n\n##TIGRESS ON DATASET\ntigress<-function(x,alpha = 0.4,L = 2,R = 1000, verbose=FALSE){ #optimal perfomance has R = 8000\n  \n  #OJOOO\n  x <- scale(x)\n  \n  \n  nvar <- ncol(x)\n  net <- matrix(0,ncol=nvar,nrow=nvar)\n  for(i in 1:nvar){\n    if(verbose==T){print(sprintf(\"Bootstrapping least-angle regression on variable %s of %s.\",i,nvar))}\n    net[-i,i] <- tigressIND(c(x[,i]),x[,-i],alpha = alpha,L = L,R = R)\n  }\n  return(net)\n}\n\n##NARROMI\nnarromi<-function(x, MIM =NULL, t = 0.6, estimator = \"mi.empirical\", disc = \"equalfreq\",lambda = 1,theta = 0.05, eps = 0.05,verbose = FALSE, ...){\n  require(\"minet\")\n  require(\"infotheo\")\n  require(\"flare\")\n  \n  if(is.null(MIM)){MIM <- build.mim(x,estimator,...)}\n  \n  ##OJOOO!!\n  x <- scale(x)\n  \n  nvar <- nrow(MIM)\n  \n  if(theta == \"choose\"){theta <- quantile(sort(abs(MIM))[-c(1:nvar)],0.15)}\n  \n  if(verbose == TRUE){ print(\"Building/finding MI matrix.\")}\n  MIM[abs(MIM)<theta] <- 0\n  diag(MIM) <- 0\n  net <- matrix(0,nrow = nvar, ncol = nvar)\n  \n  for(i in 1:nvar){\n    if(verbose == TRUE){print( sprintf(\"Executing RO step on variable %s of %s.\",i,nvar) )}\n    \n    candidate_TF <- unname(which(MIM[,i]!=0))\n    zeroes <- 1\n#    huh <-0 \n    while(zeroes > 0){\n      if(length(candidate_TF)==0){break}\n      RO <- slim(X = as.matrix(x[,candidate_TF]), Y = x[,i], \n                 method = \"lq\", q=1, lambda=lambda,verbose = F, nlambda = 1)#,...)\n      zero <- abs(RO$beta) < eps\n      candidate_TF <- candidate_TF[!zero]\n      zeroes <- sum(zero)\n#      huh <- huh+1\n#      print(huh)\n    }\n    \n    if(length(candidate_TF)>0){\n      transformed_MI <- MIM_transform(MIM[,i][candidate_TF])\n      net[,i][candidate_TF]<-sign(RO$beta)*(t*transformed_MI + (1-t)*abs(RO$beta))\n    }\n    \n    \n  }\n  return(net)\n}\n\n\n##SAVE AND LOAD R OBJECTS\nsaveobj<-function(x, gitignore = F){\n  dir <- \"Robjects/\"\n  if(gitignore = T){dir <- \"Robjects/Results\"}\n  assign(x,get(x,envir = .GlobalEnv),envir = environment())\n  saveRDS(get(x,envir = environment()),here(paste0(dir,x,\".RDS\")))\n} \nreadobj<-function(x) assign(x,readRDS(here(paste0(\"/Robjects/\",x,\".RDS\"))),envir = .GlobalEnv)\n\nsavelist <- function(...){\n  list <- c(...)\n  for(i in list) saveobj(i)\n}\nreadlist <- function(...){\n  list <- c(...)\n  for(i in list) readobj(i)\n}\n\nrobject_list <- function(){\n  l <- list.files(here(\"robjects\"))\n  l_nonames <- tools::file_path_sans_ext(l)\n  return(l_nonames)\n} \n\n",
    "created" : 1540581816740.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3857693353",
    "id" : "6DA17380",
    "lastKnownWriteTime" : 1541964825,
    "last_content_update" : 1541964825711,
    "path" : "G:/Mi unidad/Proyecto_GenÃ³mica/functions.R",
    "project_path" : "functions.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}